@using DevExtreme.AspNet.Mvc
@using TestDevExtreme.Models;
@{
    ViewData["Title"] = "Home Page";
}

@model IEnumerable<Warehouse>;

<div class="text-center">
    <h1 class="display-4">Приветствую</h1>
    <p>Простое web-приложение с использованием фреймворка DevExtreme</p>
</div>

<h2>Склады</h2>

@(Html.DevExtreme().DataGrid<Warehouse>()
    .ID("gridContainer")
    .DataSource(ds => ds.Mvc()
        .Controller("Home")
        .LoadAction("GetWarehouses")
        .InsertAction("InsertWarehouse")
        .UpdateAction("UpdateWarehouse")
        .DeleteAction("DeleteWarehouse")
        .Key("WarehouseID")
    )
    .DataSourceOptions( o =>
        o.Select("WarehouseName", "WarehouseName", "Country", "Region", "City", "Street", "Building", "PostCode", "WarehouseID")
    )
    .KeyExpr("WarehouseID")
    .RemoteOperations(true)
    .AllowColumnReordering(true)
    .RowAlternationEnabled(true)
    .ShowBorders(true)
    .ColumnChooser(c => c.Enabled(true))
    .ColumnFixing(c => c.Enabled(true))
    @*.OnContentReady("contentReady") из-за этого не работало*@
    .Paging(p => p.PageSize(10))
    .Pager(p => p
        .ShowPageSizeSelector(true)
        .AllowedPageSizes(new[] { 1, 3, 5, 10 })
    )
    .SearchPanel(s => s
        .Visible(true)
        .HighlightCaseSensitive(true)
    )
    .Columns(c => {
        c.Add().DataField("WarehouseName").Caption("Наименование склада");
        c.Add().DataField("Country").Caption("Страна");
        c.Add().DataField("Region").Caption("Регион");
        c.Add().DataField("City").Caption("Город");
        c.Add().DataField("Street").Caption("Улица");
        c.Add().DataField("Building").Caption("Строение");
        c.Add().DataField("PostCode").Caption("Индекс");
    })
    .MasterDetail(
        md => {
            md.Enabled(true);
            md.Template(@<text>
                <div style="padding: 0 0 5px 10px; font-size: 14px; font-weight: bold;">Вещи на <%- data.WarehouseName %>:</div>
                @(Html.DevExtreme().DataGrid<Good>()
                    .ShowBorders(true)
                    .KeyExpr("GoodID")
                    .DataSource(ds => ds.Mvc()
                        .Controller("Good")
                        .LoadAction("GetGoodsByWarehouseID")
                        .LoadParams(new { WarehouseID = new JS("data.WarehouseID") })
                        .InsertAction("InsertGood")
                        .UpdateAction("UpdateGood")
                        .DeleteAction("DeleteGood")
                        .Key("GoodID")
                     )
                     .DataSourceOptions(o => 
                     {
                         o.Select("GoodName", "GoodCount", "GoodID");
                         
                     })
                     .Columns(c => {
                        c.Add().DataField("GoodName").Caption("Наименование товара").Width(300);
                        c.Add().DataField("GoodCount").Caption("Количество товара").Width(160);
                        c.Add().DataField("GoodID").Visible(false);
                        c.Add().DataField("WarehouseID").Visible(false);
                     })
                     .Editing( e => e.Mode(GridEditMode.Popup)
                            .AllowUpdating(true)
                            .AllowAdding(true)
                            .AllowDeleting(true)
                            .Popup(p => p
                                .Title("Работа с данными вещи")
                                .ShowTitle(true)
                                .Width(700)
                                .Height(525)
                                )
                                .Form(f =>
                                    f.Items(items => {
                                        items.AddGroup()
                                        .ColCount(2)
                                        .ColSpan(2)

                                        .Items(groupItems => {
                                            groupItems.AddSimpleFor(m => m.GoodName).IsRequired(true);
                                            groupItems.AddSimpleFor(m => m.GoodCount).IsRequired(true);
                                            groupItems.AddSimpleFor(m => m.warehouseID);
                                        });
                                    }))

                     )
                )

            </text>);
        })
    .Editing(e => e.Mode(GridEditMode.Popup)
            .AllowUpdating(true)
            .AllowAdding(true)
            .AllowDeleting(true)
            .Popup(p => p
                .Title("Работа с данными склада")
                .ShowTitle(true)
                .Width(700)
                .Height(525)
            )
            .Form(f => f.Items(items =>
            {
                items.AddGroup()
                    .ColCount(2)
                    .ColSpan(2)

                    .Items(groupItems => {
                        groupItems.AddSimpleFor(m => m.WarehouseName).IsRequired(true);
                        groupItems.AddSimpleFor(m => m.Country);
                        groupItems.AddSimpleFor(m => m.Region);
                        groupItems.AddSimpleFor(m => m.City);
                        groupItems.AddSimpleFor(m => m.Street);
                        groupItems.AddSimpleFor(m => m.Building);
                        groupItems.AddSimpleFor(m => m.PostCode);
                    });
            }))
    )
)